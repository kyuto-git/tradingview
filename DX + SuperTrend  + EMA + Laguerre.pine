//@version=4

study("DX + Trend Situational Awareness LINE ver", shorttitle="DX + SuperTrend  + EMA + Laguerre", overlay=true)

///////////////////////////////////////
//SuperTrend MTF
//参考 https://jp.tradingview.com/v/GhRBe9md/

src = input(hl2, title="Source")
Factor = input(3,title="ATR Multiplier", minval=1,step=0.1, type=input.float)
Pd = input(10, title="ATR Period", minval=1,maxval = 100)

ma_type = input(defval="RMA", title="Calculation Method(Default SuperTrend=RMA):", options=["RMA","EMA","ZeroLag EMA","DEMA","TEMA","SMA","Smooth SMA","Hull MA","Triangular MA","SuperSmooth MA","LSMA","WMA","VWMA","VWAP","Blackman Filter"])

// === ma_type
variant_supersmoother(src, len) =>
    a1 = exp(-1.414 * 3.14159 / len)
    b1 = 2 * a1 * cos(1.414 * 3.14159 / len)
    c2 = b1
    c3 = -a1 * a1
    c1 = 1 - c2 - c3
    v9 = 0.0
    v9 := c1 * (src + nz(src[1])) / 2 + c2 * nz(v9[1]) + c3 * nz(v9[2])
    v9

variant_smoothed(src, len) =>
    v5 = 0.0
    sma_1 = sma(src, len)
    v5 := na(v5[1]) ? sma_1 : (v5[1] * (len - 1) + src) / len
    v5

variant_zerolagema(src, len) =>
    ema1 = ema(src, len)
    ema2 = ema(ema1, len)
    v10 = ema1 + ema1 - ema2
    v10

variant_doubleema(src, len) =>
    v2 = ema(src, len)
    v6 = 2 * v2 - ema(v2, len)
    v6

variant_tripleema(src, len) =>
    v2 = ema(src, len)
    v7 = 3 * (v2 - ema(v2, len)) + ema(ema(v2, len), len)  // Triple Exponential
    v7

variant_LSMA(src, len) =>
    v2 = linreg(src, len, 0)
    v2

filter(src,len)=>
    pi = 3.14159
    sum = 0.
    sumw = 0.
    for i = 0 to len-1
        k = i/len
        w = 0.42 - 0.5 * cos(2 * pi * k) + 0.08 * cos(4 * pi * k)
        sumw := sumw + w
        sum := sum + w*src[i]
    sum/sumw
//----

// return variant, defaults to SMA
variant(type, src, len) =>
    ema_1 = ema(src, len)
    wma_1 = wma(src, len)
    rma_1 = rma(src, len)
    vwma_1 = vwma(src, len)
    vwap_1 = vwap(src)
    variant_smoothed__1 = variant_smoothed(src, len)
    variant_doubleema__1 = variant_doubleema(src, len)
    variant_tripleema__1 = variant_tripleema(src, len)
    wma_2 = wma(src, len / 2)
    wma_3 = wma(src, len)
    wma_4 = wma(2 * wma_2 - wma_3, round(sqrt(len)))
    variant_supersmoother__1 = variant_supersmoother(src, len)
    variant_zerolagema__1 = variant_zerolagema(src, len)
    sma_1 = sma(src, len)
    sma_2 = sma(sma_1, len)
    sma_3 = sma(src, len)
    type == "EMA" ? ema_1 :
       type == "WMA" ? wma_1 :
       type == "RMA" ? rma_1 :
       type == "VWMA" ? vwma_1 :
       type == "VWAP" ? vwap_1 :
       type == "Smooth SMA" ? variant_smoothed__1 :
       type == "DEMA" ? variant_doubleema__1 :
       type == "TEMA" ? variant_tripleema__1 :
       type == "Hull MA" ? wma_4 :
       type == "SuperSmooth MA" ? variant_supersmoother__1 :
       type == "ZeroLag EMA" ? variant_zerolagema__1 :
       type == "Blackman Filter" ? filter(src,len) :
       type == "LSMA" ? variant_LSMA(src, len) :
       type == "Triangular MA" ? sma_2 : sma_3

// - /variant


res1 = input(title="1st Timeframe", type=input.resolution, defval="")
res2 = input(title="2nd Timeframe", type=input.resolution, defval="15")
res3 = input(title="3rd Timeframe", type=input.resolution, defval="60")
res4 = input(title="4th Timeframe", type=input.resolution, defval="1D")
// res5 = input(title="5th Timeframe", type=input.resolution, defval="240")
// res6 = input(title="6th Timeframe", type=input.resolution, defval="1W")


atr= variant(ma_type, tr, Pd)

Supertrend(Factor) =>
    Up=src-(Factor*atr)
    Dn=src+(Factor*atr)

    TrendUp = 0.0
    TrendUp := close[1]>TrendUp[1] ? max(Up,TrendUp[1]) : Up
    TrendDown = 0.0
    TrendDown := close[1]<TrendDown[1]? min(Dn,TrendDown[1]) : Dn
    Trend = 0.0
    Trend := close > TrendDown[1] ? 1: close< TrendUp[1]? -1: nz(Trend[1],1)
    Tsl = Trend==1? TrendUp: TrendDown

    [Trend, Tsl]

[Trend,Tsl] = Supertrend(Factor)


TREND1   = security(syminfo.tickerid, res1, Tsl)
TREND2   = security(syminfo.tickerid, res2, Tsl)
TREND3   = security(syminfo.tickerid, res3, Tsl)
TREND4   = security(syminfo.tickerid, res4, Tsl)
// TREND5   = security(syminfo.tickerid, res5, Tsl)
// TREND6   = security(syminfo.tickerid, res6, Tsl)

ST1_Trend_MTF = TREND1<close? 1:-1
ST2_Trend_MTF = TREND2<close? 1:-1
ST3_Trend_MTF = TREND3<close? 1:-1
ST4_Trend_MTF = TREND4<close? 1:-1
// ST5_Trend_MTF = TREND5<close? 1:-1
// ST6_Trend_MTF = TREND6<close? 1:-1


calculateTimeDividedBy(period) =>
    timeDividiedBy = 31104000000
    if(period == '1M' or period == 'M')
        timeDividiedBy := 30 * 86400000
    if(period == '1D' or period == 'D')
        timeDividiedBy := 86400000
    if(period == '1W' or period == 'W')
        timeDividiedBy := 7 * 86400000
    if(period == '240')
        timeDividiedBy := 240 * 60 * 1000
    if(period == '180')
        timeDividiedBy := 180 * 60 * 1000
    if(period == '120')
        timeDividiedBy := 120 * 60 * 1000
    if(period == '60')
        timeDividiedBy := 60 * 60 * 1000
    if(period == '45')
        timeDividiedBy := 45 * 60 * 1000
    if(period == '30')
        timeDividiedBy := 30 * 60 * 1000
    if(period == '15')
        timeDividiedBy := 15 * 60 * 1000
    if(period == '5')
        timeDividiedBy := 5 * 60 * 1000
    if(period == '3')
        timeDividiedBy := 3 * 60 * 1000
    if(period == '1')
        timeDividiedBy := 1 * 60 * 1000
    timeDividiedBy

visible(res)=>
     calculateTimeDividedBy(res)<change(time(timeframe.period))

lapos_x = timenow + round(change(time)*2)
lapos_y = highest(5)// + (0.15 * highest(20))

f_draw_label(res,x,y,_text,_textcolor, _size)=>
    var label Label = na
    label.delete(Label)
    Label := visible(res)?na:(label.new(x, y, _text, color=color.new(color.white, 50), textcolor=_textcolor, style=label.style_none, yloc=yloc.price, xloc=xloc.bar_time, size=_size))

res_to_string(res)=>
    str = iff(res == "1", "1m", iff(res == "5", "5m", iff(res == "3", "3m", iff(res == "15", "15m", iff(res == "30", "30m", iff(res == "45", "45m", iff(res == "60", "1h", iff(res == "120", "2h",
     iff(res == "240", "4h",iff(res == "360", "6h",iff(res == "720", "12h",iff(res == "120", "2h", iff(res == "180", "3h", iff(res == "1D", "1D", iff(res == "3D", "3D", iff(res == "1W", "1W", iff(res == "1M", "1M", "")))))))))))))))))
    str


// draw the TF labels
f_draw_label(res1,lapos_x,TREND1, res_to_string(res1), color.gray, size.small)
f_draw_label(res2,lapos_x,TREND2, res_to_string(res2), color.gray, size.small)
f_draw_label(res3,lapos_x,TREND3, res_to_string(res3), color.gray, size.small)
f_draw_label(res4,lapos_x,TREND4, res_to_string(res4), color.gray, size.small)
// f_draw_label(res5,lapos_x,TREND5, res_to_string(res5), color.gray, size.small)
// f_draw_label(res6,lapos_x,TREND6, res_to_string(res6), color.gray, size.small)


heatmap_color(cond1, cond2) =>
    cond1 ? color.new(color.lime, 50) : cond2 ? color.new(color.red, 50) : na



//onoff
ST_onoff_1st = input(true, title="ST_onoff_1st ON/OFF")
ST_onoff_2nd = input(true, title="ST_onoff_2nd ON/OFF")
ST_onoff_3rd = input(true, title="ST_onoff_3rd ON/OFF")
ST_onoff_4th = input(true, title="ST_onoff_4th ON/OFF")
// ST_onoff_5th = input(true, title="ST_onoff_5th ON/OFF")
// ST_onoff_6th = input(true, title="ST_onoff_6th ON/OFF")


plot(visible(res1) and ST_onoff_1st ? na:TREND1, color=heatmap_color(ST1_Trend_MTF==1,ST1_Trend_MTF==-1), linewidth=2, transp =50, title = "1st Timeframe")
plot(visible(res2) and ST_onoff_2nd ? na:TREND2, color=heatmap_color(ST2_Trend_MTF==1,ST2_Trend_MTF==-1), linewidth=2, transp =50, title = "2nd Timeframe")
plot(visible(res3) and ST_onoff_3rd ? na:TREND3, color=heatmap_color(ST3_Trend_MTF==1,ST3_Trend_MTF==-1), linewidth=2, transp =50, title = "3rd Timeframe")
plot(visible(res4) and ST_onoff_4th ? na:TREND4, color=heatmap_color(ST4_Trend_MTF==1,ST4_Trend_MTF==-1), linewidth=2, transp =50, title = "4th Timeframe")
// plot(visible(res5) and ST_onoff_5th ? na:TREND5, color=heatmap_color(ST5_Trend_MTF==1,ST5_Trend_MTF==-1), linewidth=2, transp =50, title = "5th Timeframe")
// plot(visible(res6) and ST_onoff_6th ? na:TREND6, color=heatmap_color(ST6_Trend_MTF==1,ST6_Trend_MTF==-1), linewidth=2, transp =50, title = "6th Timeframe")


///////////////////////////////////////
//マルチタイムフレームEMA
//onoff
EMA_onoff_A_1 = input(true, title="EMA_A_1 ON/OFF")
EMA_onoff_A_2 = input(true, title="EMA_A_2 ON/OFF")
EMA_onoff_A_3 = input(true, title="EMA_A_3 ON/OFF")
EMA_onoff_A_4 = input(true, title="EMA_A_4 ON/OFF")
EMA_onoff_A_5 = input(true, title="EMA_A_5 ON/OFF")
EMA_onoff_A_200 = input(true, title="EMA_A_200 ON/OFF")

// EMA_onoff_B_1 = input(false, title="EMA_B_1 ON/OFF")
// EMA_onoff_B_2 = input(false, title="EMA_B_2 ON/OFF")
// EMA_onoff_B_3 = input(false, title="EMA_B_3 ON/OFF")
// EMA_onoff_B_4 = input(false, title="EMA_B_4 ON/OFF")
// EMA_onoff_B_5 = input(false, title="EMA_B_5 ON/OFF")
EMA_onoff_B_200 = input(true, title="EMA_B_200 ON/OFF")

// EMA_onoff_C_1 = input(false, title="EMA_C_1 ON/OFF")
// EMA_onoff_C_2 = input(false, title="EMA_C_2 ON/OFF")
// EMA_onoff_C_3 = input(false, title="EMA_C_3 ON/OFF")
// EMA_onoff_C_4 = input(false, title="EMA_C_4 ON/OFF")
// EMA_onoff_C_5 = input(false, title="EMA_C_5 ON/OFF")
EMA_onoff_C_200 = input(true, title="EMA_C_200 ON/OFF")

// EMA_onoff_D_1 = input(false, title="EMA_D_1 ON/OFF")
// EMA_onoff_D_2 = input(false, title="EMA_D_2 ON/OFF")
// EMA_onoff_D_3 = input(false, title="EMA_D_3 ON/OFF")
// EMA_onoff_D_4 = input(false, title="EMA_D_4 ON/OFF")
// EMA_onoff_D_5 = input(false, title="EMA_D_5 ON/OFF")
EMA_onoff_D_200 = input(true, title="EMA_D_200 ON/OFF")


//timeframe
EMA_TF_A = input(title="Time Frame A", type=input.resolution, defval="")
EMA_TF_B = input(title="Time Frame B", type=input.resolution, defval="15")
EMA_TF_C = input(title="Time Frame C", type=input.resolution, defval="60")
EMA_TF_D = input(title="Time Frame D", type=input.resolution, defval="1D")


//period
EMA_period1 = input(title="EMAperiod 1", defval=5)
EMA_period2 = input(title="EMAperiod 2", defval=8)
EMA_period3 = input(title="EMAperiod 3", defval=13)
EMA_period4 = input(title="EMAperiod 4", defval=21)
EMA_period5 = input(title="EMAperiod 5", defval=34)
EMA_period200 = input(title="EMAperiod 200", defval=200)


//EMA
//5分足のEMA6種
EMA_A_1 = security(syminfo.tickerid, EMA_TF_A, ema(close, EMA_period1), barmerge.gaps_on)
EMA_A_2 = security(syminfo.tickerid, EMA_TF_A, ema(close, EMA_period2), barmerge.gaps_on)
EMA_A_3 = security(syminfo.tickerid, EMA_TF_A, ema(close, EMA_period3), barmerge.gaps_on)
EMA_A_4 = security(syminfo.tickerid, EMA_TF_A, ema(close, EMA_period4), barmerge.gaps_on)
EMA_A_5 = security(syminfo.tickerid, EMA_TF_A, ema(close, EMA_period5), barmerge.gaps_on)
EMA_A_200 = security(syminfo.tickerid, EMA_TF_A, ema(close, EMA_period200), barmerge.gaps_on)

//15分足のEMA6種
EMA_B_1 = security(syminfo.tickerid, EMA_TF_B, ema(close, EMA_period1), barmerge.gaps_on)
EMA_B_2 = security(syminfo.tickerid, EMA_TF_B, ema(close, EMA_period2), barmerge.gaps_on)
EMA_B_3 = security(syminfo.tickerid, EMA_TF_B, ema(close, EMA_period3), barmerge.gaps_on)
EMA_B_4 = security(syminfo.tickerid, EMA_TF_B, ema(close, EMA_period4), barmerge.gaps_on)
EMA_B_5 = security(syminfo.tickerid, EMA_TF_B, ema(close, EMA_period5), barmerge.gaps_on)
EMA_B_200 = security(syminfo.tickerid, EMA_TF_B, ema(close, EMA_period200), barmerge.gaps_on)

//1時間足のEMA6種
EMA_C_1 = security(syminfo.tickerid, EMA_TF_C, ema(close, EMA_period1), barmerge.gaps_on)
EMA_C_2 = security(syminfo.tickerid, EMA_TF_C, ema(close, EMA_period2), barmerge.gaps_on)
EMA_C_3 = security(syminfo.tickerid, EMA_TF_C, ema(close, EMA_period3), barmerge.gaps_on)
EMA_C_4 = security(syminfo.tickerid, EMA_TF_C, ema(close, EMA_period4), barmerge.gaps_on)
EMA_C_5 = security(syminfo.tickerid, EMA_TF_C, ema(close, EMA_period5), barmerge.gaps_on)
EMA_C_200 = security(syminfo.tickerid, EMA_TF_C, ema(close, EMA_period200), barmerge.gaps_on)

//1日足のEMA6種
EMA_D_1 = security(syminfo.tickerid, EMA_TF_D, ema(close, EMA_period1), barmerge.gaps_on)
EMA_D_2 = security(syminfo.tickerid, EMA_TF_D, ema(close, EMA_period2), barmerge.gaps_on)
EMA_D_3 = security(syminfo.tickerid, EMA_TF_D, ema(close, EMA_period3), barmerge.gaps_on)
EMA_D_4 = security(syminfo.tickerid, EMA_TF_D, ema(close, EMA_period4), barmerge.gaps_on)
EMA_D_5 = security(syminfo.tickerid, EMA_TF_D, ema(close, EMA_period5), barmerge.gaps_on)
EMA_D_200 = security(syminfo.tickerid, EMA_TF_D, ema(close, EMA_period200), barmerge.gaps_on)




EMA_colorchange(cond1, cond2) =>
    cond1 ? color.new(color.lime, 30) : cond2 ? color.new(color.red, 30) : color.new(color.yellow, 30)


trendUp_order_EMA_A = EMA_A_1 > EMA_A_2 and EMA_A_2 > EMA_A_3 and EMA_A_3 > EMA_A_4 and EMA_A_4 > EMA_A_5 and EMA_A_1 > EMA_A_200
trendUp_order_EMA_B = EMA_B_1 > EMA_B_2 and EMA_B_2 > EMA_B_3 and EMA_B_3 > EMA_B_4 and EMA_B_4 > EMA_B_5 and EMA_B_1 > EMA_B_200
trendUp_order_EMA_C = EMA_C_1 > EMA_C_2 and EMA_C_2 > EMA_C_3 and EMA_C_3 > EMA_C_4 and EMA_C_4 > EMA_C_5 and EMA_C_1 > EMA_C_200
trendUp_order_EMA_D = EMA_D_1 > EMA_D_2 and EMA_D_2 > EMA_D_3 and EMA_D_3 > EMA_D_4 and EMA_D_4 > EMA_D_5 and EMA_D_1 > EMA_D_200


trendDown_order_EMA_A = EMA_A_1 < EMA_A_2 and EMA_A_2 < EMA_A_3 and EMA_A_3 < EMA_A_4 and EMA_A_4 < EMA_A_5 and EMA_A_1 < EMA_A_200
trendDown_order_EMA_B = EMA_B_1 < EMA_B_2 and EMA_B_2 < EMA_B_3 and EMA_B_3 < EMA_B_4 and EMA_B_4 < EMA_B_5 and EMA_B_1 < EMA_B_200
trendDown_order_EMA_C = EMA_C_1 < EMA_C_2 and EMA_C_2 < EMA_C_3 and EMA_C_3 < EMA_C_4 and EMA_C_4 < EMA_C_5 and EMA_C_1 < EMA_C_200
trendDown_order_EMA_D = EMA_D_1 < EMA_D_2 and EMA_D_2 < EMA_D_3 and EMA_D_3 < EMA_D_4 and EMA_D_4 < EMA_D_5 and EMA_D_1 < EMA_D_200


//plot
//5分足のEMA6種
plot(EMA_onoff_A_1 ? EMA_A_1 : na, color=EMA_colorchange(EMA_A_1 < close and trendUp_order_EMA_A and EMA_A_1 > EMA_A_1[1] , EMA_A_1 > close and trendDown_order_EMA_A and EMA_A_1 < EMA_A_1[1]), linewidth = 1, title="EMA_A_1 ON/OFF")
plot(EMA_onoff_A_2 ? EMA_A_2 : na, color=EMA_colorchange(EMA_A_2 < close and trendUp_order_EMA_A and EMA_A_2 > EMA_A_2[1] , EMA_A_2 > close and trendDown_order_EMA_A and EMA_A_2 < EMA_A_2[1]), linewidth = 2, title="EMA_A_2 ON/OFF")
plot(EMA_onoff_A_3 ? EMA_A_3 : na, color=EMA_colorchange(EMA_A_3 < close and trendUp_order_EMA_A and EMA_A_3 > EMA_A_3[1] , EMA_A_3 > close and trendDown_order_EMA_A and EMA_A_3 < EMA_A_3[1]), linewidth = 3, title="EMA_A_3 ON/OFF")
plot(EMA_onoff_A_4 ? EMA_A_4 : na, color=EMA_colorchange(EMA_A_4 < close and trendUp_order_EMA_A and EMA_A_4 > EMA_A_4[1] , EMA_A_4 > close and trendDown_order_EMA_A and EMA_A_4 < EMA_A_4[1]), linewidth = 4, title="EMA_A_4 ON/OFF")
plot(EMA_onoff_A_5 ? EMA_A_5 : na, color=EMA_colorchange(EMA_A_5 < close and trendUp_order_EMA_A and EMA_A_5 > EMA_A_5[1] , EMA_A_5 > close and trendDown_order_EMA_A and EMA_A_5 < EMA_A_5[1]), linewidth = 4, title="EMA_A_5 ON/OFF")
plot(EMA_onoff_A_200 ? EMA_A_200 : na, color=EMA_colorchange(EMA_A_200 < close and trendUp_order_EMA_A and EMA_A_200 > EMA_A_200[1] , EMA_A_200 > close and trendDown_order_EMA_A and EMA_A_200 < EMA_A_200[1]), linewidth = 4, title="EMA_A_200 ON/OFF")


//15分足のEMA6種
// plot(EMA_onoff_B_1 ? EMA_B_1 : na, color=EMA_colorchange(EMA_B_1 < close and trendUp_order_EMA_B and EMA_B_1 > EMA_B_1[1] , EMA_B_1 > close and trendDown_order_EMA_B and EMA_B_1 < EMA_B_1[1]), linewidth = 1, title="EMA_B_1 ON/OFF")
// plot(EMA_onoff_B_2 ? EMA_B_2 : na, color=EMA_colorchange(EMA_B_2 < close and trendUp_order_EMA_B and EMA_B_2 > EMA_B_2[1] , EMA_B_2 > close and trendDown_order_EMA_B and EMA_B_2 < EMA_B_2[1]), linewidth = 2, title="EMA_B_2 ON/OFF")
// plot(EMA_onoff_B_3 ? EMA_B_3 : na, color=EMA_colorchange(EMA_B_3 < close and trendUp_order_EMA_B and EMA_B_3 > EMA_B_3[1] , EMA_B_3 > close and trendDown_order_EMA_B and EMA_B_3 < EMA_B_3[1]), linewidth = 3, title="EMA_B_3 ON/OFF")
// plot(EMA_onoff_B_4 ? EMA_B_4 : na, color=EMA_colorchange(EMA_B_4 < close and trendUp_order_EMA_B and EMA_B_4 > EMA_B_4[1] , EMA_B_4 > close and trendDown_order_EMA_B and EMA_B_4 < EMA_B_4[1]), linewidth = 4, title="EMA_B_4 ON/OFF")
// plot(EMA_onoff_B_5 ? EMA_B_5 : na, color=EMA_colorchange(EMA_B_5 < close and trendUp_order_EMA_B and EMA_B_5 > EMA_B_5[1] , EMA_B_5 > close and trendDown_order_EMA_B and EMA_B_5 < EMA_B_5[1]), linewidth = 4, title="EMA_B_5 ON/OFF")
plot(EMA_onoff_B_200 ? EMA_B_200 : na, color=EMA_colorchange(EMA_B_200 < close and trendUp_order_EMA_B and EMA_B_200 > EMA_B_200[1] , EMA_B_200 > close and trendDown_order_EMA_B and EMA_B_200 < EMA_B_200[1]), linewidth = 4, title="EMA_B_200 ON/OFF")

//1時間足のEMA6種
// plot(EMA_onoff_C_1 ? EMA_C_1 : na, color=EMA_colorchange(EMA_C_1 < close and trendUp_order_EMA_C and EMA_C_1 > EMA_C_1[1] , EMA_C_1 > close and trendDown_order_EMA_C and EMA_C_1 < EMA_C_1[1]), linewidth = 1, title="EMA_C_1 ON/OFF")
// plot(EMA_onoff_C_2 ? EMA_C_2 : na, color=EMA_colorchange(EMA_C_2 < close and trendUp_order_EMA_C and EMA_C_2 > EMA_C_2[1] , EMA_C_2 > close and trendDown_order_EMA_C and EMA_C_2 < EMA_C_2[1]), linewidth = 2, title="EMA_C_2 ON/OFF")
// plot(EMA_onoff_C_3 ? EMA_C_3 : na, color=EMA_colorchange(EMA_C_3 < close and trendUp_order_EMA_C and EMA_C_3 > EMA_C_3[1] , EMA_C_3 > close and trendDown_order_EMA_C and EMA_C_3 < EMA_C_3[1]), linewidth = 3, title="EMA_C_3 ON/OFF")
// plot(EMA_onoff_C_4 ? EMA_C_4 : na, color=EMA_colorchange(EMA_C_4 < close and trendUp_order_EMA_C and EMA_C_4 > EMA_C_4[1] , EMA_C_4 > close and trendDown_order_EMA_C and EMA_C_4 < EMA_C_4[1]), linewidth = 4, title="EMA_C_4 ON/OFF")
// plot(EMA_onoff_C_5 ? EMA_C_5 : na, color=EMA_colorchange(EMA_C_5 < close and trendUp_order_EMA_C and EMA_C_5 > EMA_C_5[1] , EMA_C_5 > close and trendDown_order_EMA_C and EMA_C_5 < EMA_C_5[1]), linewidth = 4, title="EMA_C_5 ON/OFF")
plot(EMA_onoff_C_200 ? EMA_C_200 : na, color=EMA_colorchange(EMA_C_200 < close and trendUp_order_EMA_C and EMA_C_200 > EMA_C_200[1] , EMA_C_200 > close and trendDown_order_EMA_C and EMA_C_200 < EMA_C_200[1]), linewidth = 4, title="EMA_C_200 ON/OFF")

//1日足のEMA6種
// plot(EMA_onoff_D_1 ? EMA_D_1 : na, color=EMA_colorchange(EMA_D_1 < close and trendUp_order_EMA_D and EMA_D_1 > EMA_D_1[1] , EMA_D_1 > close and trendDown_order_EMA_D and EMA_D_1 < EMA_D_1[1]), linewidth = 1, title="EMA_D_1 ON/OFF")
// plot(EMA_onoff_D_2 ? EMA_D_2 : na, color=EMA_colorchange(EMA_D_2 < close and trendUp_order_EMA_D and EMA_D_2 > EMA_D_2[1] , EMA_D_2 > close and trendDown_order_EMA_D and EMA_D_2 < EMA_D_2[1]), linewidth = 2, title="EMA_D_2 ON/OFF")
// plot(EMA_onoff_D_3 ? EMA_D_3 : na, color=EMA_colorchange(EMA_D_3 < close and trendUp_order_EMA_D and EMA_D_3 > EMA_D_3[1] , EMA_D_3 > close and trendDown_order_EMA_D and EMA_D_3 < EMA_D_3[1]), linewidth = 3, title="EMA_D_3 ON/OFF")
// plot(EMA_onoff_D_4 ? EMA_D_4 : na, color=EMA_colorchange(EMA_D_4 < close and trendUp_order_EMA_D and EMA_D_4 > EMA_D_4[1] , EMA_D_4 > close and trendDown_order_EMA_D and EMA_D_4 < EMA_D_4[1]), linewidth = 4, title="EMA_D_4 ON/OFF")
// plot(EMA_onoff_D_5 ? EMA_D_5 : na, color=EMA_colorchange(EMA_D_5 < close and trendUp_order_EMA_D and EMA_D_5 > EMA_D_5[1] , EMA_D_5 > close and trendDown_order_EMA_D and EMA_D_5 < EMA_D_5[1]), linewidth = 4, title="EMA_D_5 ON/OFF")
plot(EMA_onoff_D_200 ? EMA_D_200 : na, color=EMA_colorchange(EMA_D_200 < close and trendUp_order_EMA_D and EMA_D_200 > EMA_D_200[1] , EMA_D_200 > close and trendDown_order_EMA_D and EMA_D_200 < EMA_D_200[1]), linewidth = 4, title="EMA_D_200 ON/OFF")



//移動平均の横にテキストを書く
//5分足
var EMA_A_1_Label = label.new(x = bar_index, y = EMA_A_1, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "5m5P")
label.set_xy(EMA_A_1_Label, x = bar_index, y = EMA_A_1)

var EMA_A_2_Label = label.new(x = bar_index, y = EMA_A_2, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "5m8P")
label.set_xy(EMA_A_2_Label, x = bar_index, y = EMA_A_2)

var EMA_A_3_Label = label.new(x = bar_index, y = EMA_A_3, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "5m13P")
label.set_xy(EMA_A_3_Label, x = bar_index, y = EMA_A_3)

var EMA_A_4_Label = label.new(x = bar_index, y = EMA_A_4, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "5m21P")
label.set_xy(EMA_A_4_Label, x = bar_index, y = EMA_A_4)

var EMA_A_5_Label = label.new(x = bar_index, y = EMA_A_5, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "5m34P")
label.set_xy(EMA_A_5_Label, x = bar_index, y = EMA_A_5)

var EMA_A_200_Label = label.new(x = bar_index, y = EMA_A_200, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "5m200P")
label.set_xy(EMA_A_200_Label, x = bar_index, y = EMA_A_200)


// //15分足
// var EMA_B_1_Label = label.new(x = bar_index, y = EMA_B_1, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "15m5P")
// label.set_xy(EMA_B_1_Label, x = bar_index, y = EMA_B_1)

// var EMA_B_2_Label = label.new(x = bar_index, y = EMA_B_2, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "15m8P")
// label.set_xy(EMA_B_2_Label, x = bar_index, y = EMA_B_2)

// var EMA_B_3_Label = label.new(x = bar_index, y = EMA_B_3, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "15m13P")
// label.set_xy(EMA_B_3_Label, x = bar_index, y = EMA_B_3)

// var EMA_B_4_Label = label.new(x = bar_index, y = EMA_B_4, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "15m21P")
// label.set_xy(EMA_B_4_Label, x = bar_index, y = EMA_B_4)

// var EMA_B_5_Label = label.new(x = bar_index, y = EMA_B_5, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "15m34P")
// label.set_xy(EMA_B_5_Label, x = bar_index, y = EMA_B_5)

var EMA_B_200_Label = label.new(x = bar_index, y = EMA_B_200, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "15m200P")
label.set_xy(EMA_B_200_Label, x = bar_index, y = EMA_B_200)


//1時間足
// var EMA_C_1_Label = label.new(x = bar_index, y = EMA_C_1, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "60m5P")
// label.set_xy(EMA_C_1_Label, x = bar_index, y = EMA_C_1)

// var EMA_C_2_Label = label.new(x = bar_index, y = EMA_C_2, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "60m8P")
// label.set_xy(EMA_C_2_Label, x = bar_index, y = EMA_C_2)

// var EMA_C_3_Label = label.new(x = bar_index, y = EMA_C_3, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "60m13P")
// label.set_xy(EMA_C_3_Label, x = bar_index, y = EMA_C_3)

// var EMA_C_4_Label = label.new(x = bar_index, y = EMA_C_4, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "60m21P")
// label.set_xy(EMA_C_4_Label, x = bar_index, y = EMA_C_4)

// var EMA_C_5_Label = label.new(x = bar_index, y = EMA_C_5, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "60m34P")
// label.set_xy(EMA_C_5_Label, x = bar_index, y = EMA_C_5)

var EMA_C_200_Label = label.new(x = bar_index, y = EMA_C_200, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "60m200P")
label.set_xy(EMA_C_200_Label, x = bar_index, y = EMA_C_200)


//1日足
// var EMA_D_1_Label = label.new(x = bar_index, y = EMA_D_1, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "1d5P")
// label.set_xy(EMA_D_1_Label, x = bar_index, y = EMA_D_1)

// var EMA_D_2_Label = label.new(x = bar_index, y = EMA_D_2, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "1d8P")
// label.set_xy(EMA_D_2_Label, x = bar_index, y = EMA_D_2)

// var EMA_D_3_Label = label.new(x = bar_index, y = EMA_D_3, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "1d13P")
// label.set_xy(EMA_D_3_Label, x = bar_index, y = EMA_D_3)

// var EMA_D_4_Label = label.new(x = bar_index, y = EMA_D_4, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "1d21P")
// label.set_xy(EMA_D_4_Label, x = bar_index, y = EMA_D_4)

// var EMA_D_5_Label = label.new(x = bar_index, y = EMA_D_5, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "1d34P")
// label.set_xy(EMA_D_5_Label, x = bar_index, y = EMA_D_5)

var EMA_D_200_Label = label.new(x = bar_index, y = EMA_D_200, style = label.style_label_left, color = color.rgb(0, 0, 0, 100), textcolor = color.black, text = "1d200P")
label.set_xy(EMA_D_200_Label, x = bar_index, y = EMA_D_200)


///////////////////////////////////////
// //Laguerre Filter MTF

// colorchange = input(title="Laguerre Change Color ?", type=input.bool, defval=true)

// //Source
// src_LF = input(title="Source", defval=hl2)

// //Gamma Inputs
// alpha = input(title="Alpha", type=input.float, minval=0, maxval=1, step=0.1, defval=0.3)
// gamma = 1-alpha

// //Laguerre Filter
// laguerre(a, b) =>
//     l0 = 0.0
//     l1 = 0.0
//     l2 = 0.0
//     l3 = 0.0

//     l0 := (1 - b)*a+b*nz(l0[1])
//     l1 := -b*l0+nz(l0[1])+b*nz(l1[1])
//     l2 := -b*l1+nz(l1[1])+b*nz(l2[1])
//     l3 := -b*l2+nz(l2[1])+b*nz(l3[1])
//     laguerre = (l0 + 2 * l1 + 2 * l2 + l3)/6

// //Filter Values
// LagF  = laguerre(src_LF, gamma)


// //onoff
// onoff_1_LF  = input(true, title="1_LF ON/OFF")
// onoff_2_LF  = input(false, title="2_LF ON/OFF")
// onoff_3_LF  = input(false, title="3_LF ON/OFF")
// onoff_4_LF  = input(false, title="4_LF ON/OFF")

// //timeframe
// LagF_TF_1 = input(title="1_LF_TF", type=input.resolution, defval="")
// LagF_TF_2 = input(title="2_LF_TF", type=input.resolution, defval="15")
// LagF_TF_3 = input(title="3_LF_TF", type=input.resolution, defval="60")
// LagF_TF_4 = input(title="4_LF_TF", type=input.resolution, defval="1D")

// //別のシンボル／時間足をリクエスト
// LagF_1 = security(syminfo.tickerid, LagF_TF_1, LagF)
// LagF_2 = security(syminfo.tickerid, LagF_TF_2, LagF)
// LagF_3 = security(syminfo.tickerid, LagF_TF_3, LagF)
// LagF_4 = security(syminfo.tickerid, LagF_TF_4, LagF)


// trendUp_order_LagF = LagF_1 > LagF_2 and LagF_2 > LagF_3 and LagF_1 > LagF_4
// trendDown_order_LagF = LagF_1 < LagF_2 and LagF_2 < LagF_3 and LagF_1 < LagF_4

// LagF_colorchange(cond1, cond2) =>
//     cond1 ? color.new(color.green, 80) : cond2 ? color.new(color.red, 80) : color.new(color.yellow, 80)

// Color_1 = colorchange ? LagF_colorchange(LagF_1 > LagF_1[1] , LagF_1 < LagF_1[1]) : color.new(color.yellow, 80)
// Color_2 = colorchange ? LagF_colorchange(LagF_2 > LagF_2[1] , LagF_2 < LagF_2[1]) : color.new(color.yellow, 80)
// Color_3 = colorchange ? LagF_colorchange(LagF_3 > LagF_3[1] , LagF_3 < LagF_3[1]) : color.new(color.yellow, 80)
// Color_4 = colorchange ? LagF_colorchange(LagF_4 > LagF_4[1] , LagF_4 < LagF_4[1]) : color.new(color.yellow, 80)


// //plot
// plot(onoff_1_LF ? LagF_1 : na,  title="LagF_1", linewidth=4, color=Color_1)
// plot(onoff_2_LF ? LagF_2 : na,  title="LagF_2", linewidth=3, color=Color_2)
// plot(onoff_3_LF ? LagF_3 : na,  title="LagF_3", linewidth=2, color=Color_3)
// plot(onoff_4_LF ? LagF_4 : na,  title="LagF_4", linewidth=2, color=Color_4)


///////////////////////////////////////
// DX method candle search alert
//トレンド判定ルール basic
C_DownTrend_basic = true
C_UpTrend_basic = true

// C_DownTrend_basic := ST1_Trend_MTF==-1 and (trendDown_order_EMA_A and EMA_A_1 > close) and (LagF_1 > close and trendDown_order_LagF)
// C_UpTrend_basic := ST1_Trend_MTF==1 and (trendUp_order_EMA_A and EMA_A_1 < close) and (LagF_1 < close and trendUp_order_LagF)
C_DownTrend_basic := ST1_Trend_MTF==-1 and (trendDown_order_EMA_A and EMA_A_1 > close) 
C_UpTrend_basic := ST1_Trend_MTF==1 and (trendUp_order_EMA_A and EMA_A_1 < close)


//トレンド判定ルール STrend
C_DownTrend_STR = true
C_UpTrend_STR = true

C_DownTrend_STR := ST1_Trend_MTF==-1 and ST2_Trend_MTF==-1 and ST3_Trend_MTF==-1 and ST4_Trend_MTF==-1
C_UpTrend_STR := ST1_Trend_MTF==1 and ST2_Trend_MTF==1 and ST3_Trend_MTF==1 and ST4_Trend_MTF==1

//トレンド判定ルール EMA
C_DownTrend_EMA = true
C_UpTrend_EMA = true

C_DownTrend_EMA := (trendDown_order_EMA_A and EMA_A_1 > close) and (trendDown_order_EMA_B and EMA_B_1 > close) and (trendDown_order_EMA_C and EMA_C_1 > close) and (trendDown_order_EMA_D and EMA_D_1 > close)
C_UpTrend_EMA := (trendUp_order_EMA_A and EMA_A_1 < close) and (trendUp_order_EMA_B and EMA_B_1 < close) and (trendUp_order_EMA_C and EMA_C_1 < close) and (trendUp_order_EMA_D and EMA_D_1 < close)

//トレンド判定ルール LagF
// C_DownTrend_LagF = true
// C_UpTrend_LagF = true

// C_DownTrend_LagF := LagF_1 > close and trendDown_order_LagF and LagF_3 < LagF_4
// C_UpTrend_LagF := LagF_1 < close and trendUp_order_LagF and LagF_3 > LagF_4


//トレンド判定ルール 総合

bool down_trend_condition = na
bool up_trend_condition = na

// trend_choice = input(defval = "basic", title="トレンド判定方法", type = input.string, options = ["basic", "basic + STrend", "basic + EMA", "basic + LagF", "STrend", "EMA", "LagF", "ALL"])

trend_choice = input(defval = "basic", title="トレンド判定方法", type = input.string, options = ["basic", "basic + STrend", "basic + EMA", "STrend", "EMA"])

if trend_choice == "basic"
    down_trend_condition := C_DownTrend_basic
    up_trend_condition := C_UpTrend_basic
else if trend_choice == "basic + STrend"
    down_trend_condition := C_DownTrend_basic and C_DownTrend_STR
    up_trend_condition := C_UpTrend_basic and C_UpTrend_STR
else if trend_choice == "basic + EMA"
    down_trend_condition := C_DownTrend_basic and C_DownTrend_EMA
    up_trend_condition := C_UpTrend_basic and C_UpTrend_EMA
// else if trend_choice == "basic + LagF"
//     down_trend_condition := C_DownTrend_basic and C_DownTrend_LagF
//     up_trend_condition := C_UpTrend_basic and C_UpTrend_LagF
else if trend_choice == "STrend"
    down_trend_condition := C_DownTrend_STR
    up_trend_condition := C_UpTrend_STR
else if trend_choice == "EMA"
    down_trend_condition := C_DownTrend_EMA
    up_trend_condition := C_UpTrend_EMA
// else if trend_choice == "LagF"
//     down_trend_condition := C_DownTrend_LagF
//     up_trend_condition := C_UpTrend_LagF
// else if trend_choice == "ALL"
//     down_trend_condition := C_DownTrend_STR and C_DownTrend_EMA and C_DownTrend_LagF
//     up_trend_condition := C_UpTrend_STR and C_UpTrend_EMA and C_UpTrend_LagF


// ローソク足の形判定

C_Len = 8  // ema depth for bodyAvg
C_ShadowPercent_DX = 3.0  // size of shadows
C_ShadowPercent = 5.0  // size of shadows
C_ShadowEqualsPercent = 100.0
C_DojiBodyPercent = 5.0
C_Factor = 2.0  // shows the number of times the shadow dominates the candlestick body

//VARIABLES

C_BodyHi = max(close, open)
C_BodyLo = min(close, open)
C_Body = C_BodyHi - C_BodyLo //実体の大きさ
C_BodyAvg = ema(C_Body, C_Len) //過去~本分の実体の大きさの平均。ただし直前の足の大きさを優先する
C_SmallBody = C_Body < C_BodyAvg //実体の大きさが平均より小さいもの
C_LongBody = C_Body > C_BodyAvg //実体の大きさが平均より大きいもの
C_UpShadow = high - C_BodyHi //上ヒゲの大きさ
C_DnShadow = C_BodyLo - low //下ヒゲの大きさ
C_HasUpShadow = C_UpShadow > C_ShadowPercent / 100 * C_Body
C_HasDnShadow = C_DnShadow > C_ShadowPercent / 100 * C_Body
C_WhiteBody = open < close //陽線ならtrue
C_BlackBody = open > close //陰線ならtrue
C_Range = high - low //ヒゲも含めたローソク足の大きさ
C_IsInsideBar = C_BodyHi[1] > C_BodyHi and C_BodyLo[1] < C_BodyLo
C_BodyMiddle = C_Body / 2 + C_BodyLo
C_ShadowEquals = C_UpShadow == C_DnShadow or abs(C_UpShadow - C_DnShadow) / C_DnShadow * 100 < C_ShadowEqualsPercent and abs(C_DnShadow - C_UpShadow) / C_UpShadow * 100 < C_ShadowEqualsPercent
C_IsDojiBody = C_Range > 0 and C_Body <= C_Range * C_DojiBodyPercent / 100
C_Doji = C_IsDojiBody and C_ShadowEquals //コマ足

//ラベルの位置
patternLabelPosLow = low - atr(30) * 0.4
patternLabelPosHigh = high + atr(30) * 0.4


//陰のこま足
C_SpinningTopBlackPercent = 34.0
C_IsSpinningTop = C_DnShadow >= C_Range / 100 * C_SpinningTopBlackPercent and C_UpShadow >= C_Range / 100 * C_SpinningTopBlackPercent and not C_IsDojiBody
C_SpinningTopBlack = C_IsSpinningTop and C_BlackBody

//陽のこま足
C_SpinningTopWhitePercent = 34.0
C_IsSpinningTopWhite = C_DnShadow >= C_Range / 100 * C_SpinningTopWhitePercent and C_UpShadow >= C_Range / 100 * C_SpinningTopWhitePercent and not C_IsDojiBody
C_SpinningTopWhite = C_IsSpinningTopWhite and C_WhiteBody


//ヒゲが長すぎるローソク足
C_bigShadow = (C_UpShadow + C_DnShadow) - (C_Body * C_ShadowPercent_DX) > 0

//逆足が大きすぎる陰線
C_bigBlackBody = C_Body > C_BodyAvg * C_Factor and C_BlackBody

//逆足が大きすぎる陽線
C_bigWhiteBody = C_Body > C_BodyAvg * C_Factor and C_WhiteBody

// 逆足が5本以上(陰線)
C_Blackchain = C_BlackBody[4] and C_BlackBody[3] and C_BlackBody[2] and C_BlackBody[1] and C_BlackBody

// 逆足が5本以上(陽線)
C_Whitechain = C_WhiteBody[4] and C_WhiteBody[3] and C_WhiteBody[2] and C_WhiteBody[1] and C_WhiteBody


// BBの中心線を越えるくらい強い
len = input(12, title = "EMA_BB 期間")
srcBB = input(ohlc4, title = "EMA_BB source")
e = ema(srcBB,len)

C_BBcrossunder = C_BlackBody and close < e / 1.0001
C_BBcrossover = C_WhiteBody and close > e * 1.0001


high_entry_condition = (C_BlackBody and not (C_SpinningTopBlack or C_bigShadow or C_bigBlackBody or C_BBcrossunder or C_Blackchain)) and (C_BlackBody[1] and not (C_SpinningTopBlack or C_bigShadow or C_bigBlackBody or C_BBcrossunder))

// plotshape(up_trend_condition and high_entry_condition, title="high_entry_condition", text="DX_high", color=color.lime, location=location.belowbar, style=shape.labelup, size=size.tiny, textcolor=color.white, transp=0)
if up_trend_condition and high_entry_condition
    var DXentry_check = '1.逆足、確認足共にコマ足のような実体がほぼないはっきりしない足が混ざってたらダメ。\n2.逆足、確認足共に実体はあっても、それ以上にヒゲが長いローソク足が続いた場合もエントリーしない方が無難\n3.トレンド逆足（陰線）が大きすぎたりしてもダメ。トレンド転換の可能性がある。\n4.トレンド逆足（陰線）が5本以上続いたら、トレンドとは逆の勢いが短期的に強いので、エントリーしない方がいい\n5.トレンド逆足（陰線）がBBの中心線を越えるくらい強いとエントリーをやめる\n6.確認足（陽線）が一気に大きくなって、BBのバンドウォーク時に張り付いた場合のエントリーは避けたほうがいい\n7.当日の最高値、最安値付近の場合はエントリーしないほうがいい（おそらく１時間足や日足といった上位足のBBやレジサポが近い）\n8.確認足（陽線）はその前の足より実体が大きいこと。1つ前のトレンド逆足を包むくらいの大きい足（包み足）ならエントリーOK\n9.確認足（陽線）のヒゲの形が上方向に長い場合はエントリーしないほうがいい'
    label.new(bar_index, patternLabelPosLow, text='DX_high', style=label.style_label_up, color=color.lime, textcolor=color.white, tooltip=DXentry_check)

alertcondition(up_trend_condition and high_entry_condition, title= "high_entry_condition", message= "DX_highエントリー確認")


low_entry_condition = (C_WhiteBody and not (C_SpinningTopWhite or C_bigShadow or C_bigWhiteBody or C_BBcrossover or C_Whitechain)) and (C_WhiteBody[1] and not (C_SpinningTopWhite or C_bigShadow or C_bigWhiteBody or C_BBcrossover))

// plotshape(down_trend_condition and low_entry_condition, title="low_entry_condition", text="DX_low", color=color.red, location=location.abovebar, style=shape.labeldown, size=size.tiny, textcolor=color.white, transp=0)
if down_trend_condition and low_entry_condition
    var DXentry_check = '1.逆足、確認足共にコマ足のような実体がほぼないはっきりしない足が混ざってたらダメ。\n2.逆足、確認足共に実体はあっても、それ以上にヒゲが長いローソク足が続いた場合もエントリーしない方が無難\n3.トレンド逆足（陽線）が大きすぎたりしてもダメ。トレンド転換の可能性がある。\n4.トレンド逆足（陽線）が5本以上続いたら、トレンドとは逆の勢いが短期的に強いので、エントリーしない方がいい\n5.トレンド逆足（陽線）がBBの中心線を越えるくらい強いとエントリーをやめる\n6.確認足（陰線）が一気に大きくなって、BBのバンドウォーク時に張り付いた場合のエントリーは避けたほうがいい\n7.当日の最高値、最安値付近の場合はエントリーしないほうがいい（おそらく１時間足や日足といった上位足のBBやレジサポが近い）\n8.確認足（陰線）はその前の足より実体が大きいこと。1つ前のトレンド逆足を包むくらいの大きい足（包み足）ならエントリーOK\n9.確認足（陰線）のヒゲの形が上方向に長い場合はエントリーしないほうがいい'
    label.new(bar_index, patternLabelPosHigh, text='DX_low', style=label.style_label_down, color=color.red, textcolor=color.white, tooltip=DXentry_check)

alertcondition(down_trend_condition and low_entry_condition, title= "low_entry_condition", message= "DX_lowエントリー確認")
